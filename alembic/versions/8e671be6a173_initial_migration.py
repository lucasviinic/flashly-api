"""initial migration

Revision ID: 8e671be6a173
Revises: 
Create Date: 2025-04-22 21:54:35.923344

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8e671be6a173'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('google_id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('picture', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('account_type', sa.Integer(), nullable=False),
    sa.Column('last_payment_date', sa.DateTime(), nullable=True),
    sa.Column('subscription_expiry', sa.DateTime(), nullable=True),
    sa.Column('refresh_token', sa.String(), nullable=True),
    sa.Column('last_reset_date', sa.DateTime(), nullable=True),
    sa.Column('credits', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_google_id'), 'users', ['google_id'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('subjects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('subject_name', sa.String(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subjects_id'), 'subjects', ['id'], unique=False)
    op.create_table('topics',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('subject_id', sa.UUID(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('topic_name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_topics_id'), 'topics', ['id'], unique=False)
    op.create_table('flashcards',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('subject_id', sa.UUID(), nullable=True),
    sa.Column('topic_id', sa.UUID(), nullable=True),
    sa.Column('question', sa.String(), nullable=False),
    sa.Column('answer', sa.String(), nullable=False),
    sa.Column('difficulty', sa.Integer(), nullable=False),
    sa.Column('last_response', sa.Boolean(), nullable=True),
    sa.Column('opened', sa.Boolean(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('origin', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("origin IN ('user', 'ai')", name='check_origin_valid_values'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flashcards_id'), 'flashcards', ['id'], unique=False)
    op.create_table('sessions',
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier'),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('subject_id', sa.String(), nullable=False, comment='Subject ID'),
    sa.Column('topic_id', sa.UUID(), nullable=True, comment='Reference to topic record ID'),
    sa.Column('topic_name', sa.String(), nullable=False, comment='Topic name'),
    sa.Column('correct_answer_count', sa.Integer(), nullable=False, comment='Number of correct answers'),
    sa.Column('incorrect_answer_count', sa.Integer(), nullable=False, comment='Number of incorrect answers'),
    sa.Column('total_questions', sa.Integer(), nullable=False, comment='Total number of questions'),
    sa.Column('total_time_spent', sa.String(), nullable=False, comment='Total time spent in the session'),
    sa.Column('easy_question_count', sa.Integer(), nullable=False, comment='Number of easy questions'),
    sa.Column('medium_question_count', sa.Integer(), nullable=False, comment='Number of medium questions'),
    sa.Column('hard_question_count', sa.Integer(), nullable=False, comment='Number of hard questions'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='Record creation date'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='Record update date'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Record deletion date'),
    sa.ForeignKeyConstraint(['topic_id'], ['topics.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sessions_id'), 'sessions', ['id'], unique=False)
    op.create_table('session_flashcards',
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier'),
    sa.Column('session_id', sa.UUID(), nullable=True, comment='Reference to session record ID'),
    sa.Column('flashcard_id', sa.UUID(), nullable=True, comment='Reference to flashcard record ID'),
    sa.Column('response', sa.Boolean(), nullable=False, comment='Answer given (correct or not)'),
    sa.Column('difficulty', sa.Integer(), nullable=False, comment='Flashcard difficulty, which can be 0, 1 or 2'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='Record creation date'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='Record update date'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Record deletion date'),
    sa.ForeignKeyConstraint(['flashcard_id'], ['flashcards.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_session_flashcards_id'), 'session_flashcards', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_session_flashcards_id'), table_name='session_flashcards')
    op.drop_table('session_flashcards')
    op.drop_index(op.f('ix_sessions_id'), table_name='sessions')
    op.drop_table('sessions')
    op.drop_index(op.f('ix_flashcards_id'), table_name='flashcards')
    op.drop_table('flashcards')
    op.drop_index(op.f('ix_topics_id'), table_name='topics')
    op.drop_table('topics')
    op.drop_index(op.f('ix_subjects_id'), table_name='subjects')
    op.drop_table('subjects')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_google_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
